// Code generated by protoc-gen-go. DO NOT EDIT.
// source: my.proto

package testdata

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestMine struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Sex                  string   `protobuf:"bytes,3,opt,name=Sex,proto3" json:"Sex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMine) Reset()         { *m = TestMine{} }
func (m *TestMine) String() string { return proto.CompactTextString(m) }
func (*TestMine) ProtoMessage()    {}
func (*TestMine) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5798dc1fd57a96, []int{0}
}

func (m *TestMine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMine.Unmarshal(m, b)
}
func (m *TestMine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMine.Marshal(b, m, deterministic)
}
func (m *TestMine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMine.Merge(m, src)
}
func (m *TestMine) XXX_Size() int {
	return xxx_messageInfo_TestMine.Size(m)
}
func (m *TestMine) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMine.DiscardUnknown(m)
}

var xxx_messageInfo_TestMine proto.InternalMessageInfo

func (m *TestMine) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestMine) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestMine) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

type TestMineResp struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Brother              string   `protobuf:"bytes,2,opt,name=brother,proto3" json:"brother,omitempty"`
	Childs               []int64  `protobuf:"varint,3,rep,packed,name=childs,proto3" json:"childs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMineResp) Reset()         { *m = TestMineResp{} }
func (m *TestMineResp) String() string { return proto.CompactTextString(m) }
func (*TestMineResp) ProtoMessage()    {}
func (*TestMineResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a5798dc1fd57a96, []int{1}
}

func (m *TestMineResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMineResp.Unmarshal(m, b)
}
func (m *TestMineResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMineResp.Marshal(b, m, deterministic)
}
func (m *TestMineResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMineResp.Merge(m, src)
}
func (m *TestMineResp) XXX_Size() int {
	return xxx_messageInfo_TestMineResp.Size(m)
}
func (m *TestMineResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMineResp.DiscardUnknown(m)
}

var xxx_messageInfo_TestMineResp proto.InternalMessageInfo

func (m *TestMineResp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestMineResp) GetBrother() string {
	if m != nil {
		return m.Brother
	}
	return ""
}

func (m *TestMineResp) GetChilds() []int64 {
	if m != nil {
		return m.Childs
	}
	return nil
}

func init() {
	proto.RegisterType((*TestMine)(nil), "testdata.TestMine")
	proto.RegisterType((*TestMineResp)(nil), "testdata.TestMineResp")
}

func init() { proto.RegisterFile("my.proto", fileDescriptor_2a5798dc1fd57a96) }

var fileDescriptor_2a5798dc1fd57a96 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc8, 0xad, 0xd4, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x28, 0x49, 0x2d, 0x2e, 0x49, 0x49, 0x2c, 0x49, 0x54, 0x72,
	0xe0, 0xe2, 0x08, 0x49, 0x2d, 0x2e, 0xf1, 0xcd, 0xcc, 0x4b, 0x15, 0xe2, 0xe3, 0x62, 0xf2, 0x4c,
	0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x62, 0xf2, 0x4c, 0x11, 0x12, 0xe2, 0x62, 0xf1, 0x4b,
	0xcc, 0x4d, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x04, 0xb8, 0x98, 0x83,
	0x53, 0x2b, 0x24, 0x98, 0xc1, 0x42, 0x20, 0xa6, 0x52, 0x00, 0x17, 0x0f, 0xcc, 0x84, 0xa0, 0xd4,
	0xe2, 0x02, 0x0c, 0x53, 0x24, 0xb8, 0xd8, 0x93, 0x8a, 0xf2, 0x4b, 0x32, 0x52, 0x8b, 0xa0, 0x06,
	0xc1, 0xb8, 0x42, 0x62, 0x5c, 0x6c, 0xc9, 0x19, 0x99, 0x39, 0x29, 0xc5, 0x12, 0xcc, 0x0a, 0xcc,
	0x1a, 0xcc, 0x41, 0x50, 0x5e, 0x12, 0x1b, 0xd8, 0x91, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x09, 0x18, 0x0b, 0xe6, 0xb0, 0x00, 0x00, 0x00,
}
